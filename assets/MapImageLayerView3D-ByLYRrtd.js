import{e as i,y as o,a as p}from"./index-D7V0kZQf.js";import{N as a}from"./DynamicLayerView3D-gsGOhvTP.js";import{y as m}from"./ExportImageParameters-YdwKb75g.js";import{i as n}from"./timeSupport-C3vEeKeA.js";import{_ as l}from"./MapServiceLayerViewHelper-C_utbmKq.js";import{r as h}from"./drapedUtils-DVtvzjj4.js";import"./LayerView3D-CHBbZXvx.js";import"./projectExtentUtils-DVLU_e0n.js";import"./ImageMaterial.glsl-_AgPEkr8.js";import"./LayerView-D9lKj_XA.js";import"./RefreshableLayerView-BIfih21S.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./sublayerUtils-LMCv_dc7.js";import"./normalizeUtils-BAxT_1OY.js";import"./normalizeUtilsCommon-DGNh6XyM.js";const u=r=>{let e=class extends r{initialize(){this.exportImageParameters=new m({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){var t;return((t=this.view)==null?void 0:t.floors)??null}get exportImageVersion(){var t;return(t=this.exportImageParameters)==null||t.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}get timeExtent(){var t;return n(this.layer,(t=this.view)==null?void 0:t.timeExtent,this._get("timeExtent"))}canResume(){var t;return!!super.canResume()&&!((t=this.timeExtent)!=null&&t.isEmpty)}};return i([o()],e.prototype,"exportImageParameters",void 0),i([o({readOnly:!0})],e.prototype,"floors",null),i([o({readOnly:!0})],e.prototype,"exportImageVersion",null),i([o()],e.prototype,"layer",void 0),i([o()],e.prototype,"suspended",void 0),i([o({readOnly:!0})],e.prototype,"timeExtent",null),e=i([p("esri.views.layers.MapImageLayerView")],e),e};let s=class extends u(a){constructor(){super(...arguments),this.type="map-image-3d"}initialize(){this._updatingHandles.add(()=>this.exportImageVersion,()=>this._updatingHandles.addPromise(this.refreshDebounced())),this._popupHighlightHelper=new l({createFetchPopupFeaturesQueryGeometry:(r,e)=>h(r,e,this.view),layerView:this,updatingHandles:this._updatingHandles})}destroy(){var r;(r=this._popupHighlightHelper)==null||r.destroy()}fetchPopupFeaturesAtLocation(r,e){return this._popupHighlightHelper.fetchPopupFeaturesAtLocation(r,e)}getFetchOptions(){return{timeExtent:this.timeExtent}}};s=i([p("esri.views.3d.layers.MapImageLayerView3D")],s);const L=s;export{L as default};
