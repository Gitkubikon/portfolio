const e={_origin:"https://api.emailjs.com"},validateParams=(e,t,s)=>{if(!e)throw"The user ID is required. Visit https://dashboard.emailjs.com/admin/integration";if(!t)throw"The service ID is required. Visit https://dashboard.emailjs.com/admin";if(!s)throw"The template ID is required. Visit https://dashboard.emailjs.com/admin/templates";return!0};class EmailJSResponseStatus{constructor(e){this.status=e.status,this.text=e.responseText}}const sendPost=(t,s,i={})=>new Promise(((r,a)=>{const n=new XMLHttpRequest;n.addEventListener("load",(({target:e})=>{const t=new EmailJSResponseStatus(e);200===t.status||"OK"===t.text?r(t):a(t)})),n.addEventListener("error",(({target:e})=>{a(new EmailJSResponseStatus(e))})),n.open("POST",e._origin+t,!0),Object.keys(i).forEach((e=>{n.setRequestHeader(e,i[e])})),n.send(s)})),t={init:(t,s="https://api.emailjs.com")=>{e._userID=t,e._origin=s},send:(t,s,i,r)=>{const a=r||e._userID;validateParams(a,t,s);const n={lib_version:"3.2.0",user_id:a,service_id:t,template_id:s,template_params:i};return sendPost("/api/v1.0/email/send",JSON.stringify(n),{"Content-type":"application/json"})},sendForm:(t,s,i,r)=>{const a=r||e._userID,n=(e=>{let t;if(t="string"==typeof e?document.querySelector(e):e,!t||"FORM"!==t.nodeName)throw"The 3rd parameter is expected to be the HTML form element or the style selector of form";return t})(i);validateParams(a,t,s);const o=new FormData(n);return o.append("lib_version","3.2.0"),o.append("service_id",t),o.append("template_id",s),o.append("user_id",a),sendPost("/api/v1.0/email/send-form",o)}};export{t as e};
